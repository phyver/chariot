>> option verbose is set to 1
>> option show_tuples is set to false
>> option verbose is set to 1
>> option continue_on_error is set to true
>> inductive type nat was succesfully defined
>> inductive type prod_2 was succesfully defined
>> coinductive type struct_2 was succesfully defined
>> Typing for s01 successful
>> the definition for s01 is complete
>> the definition s01 is provably correct

>> Typing for s012 successful
>> the definition for s012 is complete
>> the definition s012 is provably correct

>> Typing for s0101 successful
>> the definition for s0101 is complete
>> the definition s0101 is provably correct

>> Typing for bad successful
>> the definition for bad is complete
>> the definition bad is provably correct

>> Typing for f successful
>> the definition for f is complete
>> the definition f is provably correct

>> Typing for g successful
>> the definition for g is complete
>> the definition g is provably correct

>> Typing for h successful
>> the definition for h is complete
>> the definition h is provably correct

>> Typing for s successful
>> the definition for s is complete
>> the definition s is provably correct

>> coinductive type stream was succesfully defined
>> Typing for map successful
>> the definition for map is complete
>> the definition map is provably correct

>> functions in environment:
val
   s01 : struct_2(nat,nat)
    | s01 = { Fst = 0 ; Snd = 1 }⁰

val
   s012 : struct_2(nat,struct_2(nat,nat))
    | s012 = { Fst = 0 ; Snd = { Fst = 1 ; Snd = 2 }² }⁰

val
   s0101 : struct_2(struct_2(nat,nat),struct_2(nat,nat))
    | s0101 = { Fst = s01 ; Snd = s01 }⁰

val
   bad : struct_2('a,'a) → 'b
    | bad { Fst = x ; Snd = x }⁰ = ✠

val
   f : struct_2('a,'b) → prod_2('a,'b)
    | f p = Tuple_2¹ p.Fst⁰ p.Snd⁰

val
   g : struct_2('a,'b) → prod_2('a,'b)
    | g { Fst = x ; Snd = y }⁰ = Tuple_2¹ x y

val
   h : struct_2('a,struct_2('b,'c)) → prod_2(prod_2('a,'b),'c)
    | h { Fst = x ; Snd = { Fst = y ; Snd = z }² }⁰ = Tuple_2¹ (Tuple_2³ x y) z

val
   s : struct_2('a,struct_2('b,'c)) → struct_2(struct_2('a,'b),'c)
    | s { Fst = x ; Snd = { Fst = y ; Snd = z }² }⁰ = { Fst = { Fst = x ; Snd = y }² ; Snd = z }⁰

val
   map : ('a → 'b) → stream('a) → stream('b)
    | map f { Head = x ; Tail = s }⁰ = { Head = f x ; Tail = map f s }⁰

