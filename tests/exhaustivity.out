>> option verbose is set to 1
>> option continue_on_error is set to true
>> option show_priorities is set to false
>> inductive type nat was succesfully defined
>> Typing for f successful
!! warning: match failures:
!! warning:   f 1
!! warning: the definition for f is incomplete
>> the definition f is provably correct

>> inductive type list was succesfully defined
>> option allow_incomplete_defs is set to true
>> Typing for last successful
!! warning: match failures:
!! warning:   last []
!! warning: the definition for last is incomplete
>> the definition last is provably correct

>> option allow_incomplete_defs is set to false
>> Typing for last2 successful
!! warning: match failures:
!! warning:   last2 []
** error: the definition for last2 is incomplete
>> Typing for merge successful
>> the definition for merge is complete
>> the definition merge is provably correct

>> Typing for test1 successful
!! warning: match failures:
!! warning:   test1 []
!! warning:   test1 [x₂; x₄]
!! warning:   test1 [x₂; x₄; x₆; x₈]
** error: the definition for test1 is incomplete
>> Typing for test2 successful
!! warning: useless clause 2: test2 [] = ⊤
>> the definition for test2 is complete
>> the definition test2 is provably correct

val
   test2 : list('a) → 'b
    | test2 x = ⊤

>> Typing for test3 successful
!! warning: useless clause 4: test3 _₁ = ⊤
>> the definition for test3 is complete
>> the definition test3 is provably correct

val
   test3 : list(list('a)) → 'b
    | test3 [] = ⊤
    | test3 ([]::xs) = ⊤
    | test3 (y::ys::xs) = ⊤

>> option keep_useless_clauses is set to true
>> Typing for test4 successful
!! warning: useless clause 2: test4 [] = ⊤
>> the definition for test4 is complete
>> the definition test4 is provably correct

val
   test4 : list('a) → 'b
    | test4 x = ⊤
    | test4 [] = ⊤

>> Typing for test5 successful
!! warning: useless clause 4: test5 _₁ = ⊤
>> the definition for test5 is complete
>> the definition test5 is provably correct

val
   test5 : list(list('a)) → 'b
    | test5 [] = ⊤
    | test5 ([]::xs) = ⊤
    | test5 (y::ys::xs) = ⊤
    | test5 _₁ = ⊤

