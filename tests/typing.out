>> option verbose is set to 1
>> option show_priorities is set to false
>> inductive type nat was succesfully defined
>> inductive type list was succesfully defined
>> Typing for map successful
>> the definition for map is complete
>> the definition map is provably correct

>> Typing for map1 successful
>> the definition for map1 is complete
>> the definition map1 is provably correct

>> Typing for map2 successful
>> the definition for map2 is complete
>> the definition map2 is provably correct

>> Typing for map3 successful
>> the definition for map3 is complete
>> the definition map3 is provably correct

>> Typing for map4 successful
>> the definition for map4 is complete
>> the definition map4 is provably correct

>> functions in environment:
val
   map : ('a → 'b) → list('a) → list('b)
    | map f [] = []
    | map f (x::xs) = (f x)::(map f xs)

val
   map1 : ('a → 'b) → list('a) → list('b)
    | map1 f [] = []
    | map1 f (x::xs) = (f x)::(map1 f xs)

val
   map2 : (nat → nat) → list(nat) → list(nat)
    | map2 f [] = []
    | map2 f (x::xs) = (f x)::(map2 f xs)

val
   map3 : ('a → nat) → list('a) → list(nat)
    | map3 f [] = []
    | map3 f (x::xs) = (f x)::(map3 f xs)

val
   map4 : (nat → list('a)) → list(nat) → list(list('a))
    | map4 f [] = []
    | map4 f (x::xs) = (f x)::(map4 f xs)

** error: function map5 cannot be coerced to type ('a → 'b) → list('b) → list('a)
