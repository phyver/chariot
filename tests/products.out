>> functions in environment:
val
   fst : ('a * 'b) → 'a
    | fst (x, y) = x

val
   snd : ('a * 'b) → 'b
    | snd (x, y) = y

val
   pair : nat * nat
    | pair = (Zero¹, Zero¹)

val
   onetwothree : list(nat)
    | onetwothree = Cons⁵ (Succ¹ Zero¹, Cons⁵ (Succ¹ (Succ¹ Zero¹), Cons⁵ (Succ¹ (Succ¹ (Succ¹ Zero¹)), Nil⁵ ())))

val
   pairs : nat * (nat * (nat * nat))
    | pairs = (Succ¹ Zero¹, (Succ¹ (Succ¹ Zero¹), (Succ¹ (Succ¹ (Succ¹ Zero¹)), Succ¹ (Succ¹ (Succ¹ (Succ¹ Zero¹))))))

val
   test : nat * nat * nat
    | test = (Succ¹ Zero¹, Succ¹ (Succ¹ Zero¹), Succ¹ (Succ¹ (Succ¹ Zero¹)))

** error: typing error: cannot infer type of constant Tuple_4
>> functions in environment:
val
   fst : prod_2('a,'b) → 'a
    | fst (Tuple_2¹ x y) = x

val
   snd : prod_2('a,'b) → 'b
    | snd (Tuple_2¹ x y) = y

val
   pair : prod_2(nat,nat)
    | pair = Tuple_2³ Zero¹ Zero¹

val
   onetwothree : list(nat)
    | onetwothree = Cons⁵ (Tuple_2³ (Succ¹ Zero¹) (Cons⁵ (Tuple_2³ (Succ¹ (Succ¹ Zero¹)) (Cons⁵ (Tuple_2³ (Succ¹ (Succ¹ (Succ¹ Zero¹))) (Nil⁵ Tuple_0¹))))))

val
   pairs : prod_2(nat,prod_2(nat,prod_2(nat,nat)))
    | pairs = Tuple_2⁷ (Succ¹ Zero¹) (Tuple_2⁵ (Succ¹ (Succ¹ Zero¹)) (Tuple_2³ (Succ¹ (Succ¹ (Succ¹ Zero¹))) (Succ¹ (Succ¹ (Succ¹ (Succ¹ Zero¹))))))

val
   test : prod_3(nat,nat,nat)
    | test = Tuple_3³ (Succ¹ Zero¹) (Succ¹ (Succ¹ Zero¹)) (Succ¹ (Succ¹ (Succ¹ Zero¹)))

