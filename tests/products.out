(* ===  functions in environment  =================== *)
val
   fst : 'a * 'b → 'a
    | fst (x, y) = x

val
   snd : 'a * 'b → 'b
    | snd (x, y) = y

val
   pair : nat * nat
    | pair = (0, 0)

val
   onetwothree : list(nat)
    | onetwothree = Cons⁷ (1, Cons⁷ (2, Cons⁷ (3, Nil⁷ ())))

(* ================================================== *)

val
   test : nat * nat * nat
    | test = (1, 2, 3)

-- ** typing error: cannot infer type of constant Prod_4
(* ===  functions in environment  =================== *)
val
   fst : prod_2('a,'b) → 'a
    | fst (Prod_2¹ x y) = x

val
   snd : prod_2('a,'b) → 'b
    | snd (Prod_2¹ x y) = y

val
   pair : prod_2(nat,nat)
    | pair = Prod_2³ 0 0

val
   onetwothree : list(nat)
    | onetwothree = Cons⁷ (Prod_2⁵ 1 (Cons⁷ (Prod_2⁵ 2 (Cons⁷ (Prod_2⁵ 3 (Nil⁷ Prod_0¹))))))

val
   test : prod_3(nat,nat,nat)
    | test = Prod_3³ 1 2 3

(* ================================================== *)

