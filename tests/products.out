(* ===  functions in environment  =================== *)
val
   fst : ('a * 'b) → 'a
    | fst (x, y) = x

val
   snd : ('a * 'b) → 'b
    | snd (x, y) = y

val
   pair : nat * nat
    | pair = (0, 0)

val
   onetwothree : list(nat)
    | onetwothree = Cons⁷ (1, Cons⁷ (2, Cons⁷ (3, Nil⁷ ())))

val
   pairs : nat * (nat * (nat * nat))
    | pairs = (1, (2, (3, 4)))

(* ================================================== *)

val
   test : nat * nat * nat
    | test = (1, 2, 3)

-- ** typing error: cannot infer type of constant Tuple_4
(* ===  functions in environment  =================== *)
val
   fst : prod_2('a,'b) → 'a
    | fst (Tuple_2¹ x y) = x

val
   snd : prod_2('a,'b) → 'b
    | snd (Tuple_2¹ x y) = y

val
   pair : prod_2(nat,nat)
    | pair = Tuple_2³ 0 0

val
   onetwothree : list(nat)
    | onetwothree = Cons⁷ (Tuple_2⁵ 1 (Cons⁷ (Tuple_2⁵ 2 (Cons⁷ (Tuple_2⁵ 3 (Nil⁷ Tuple_0¹))))))

val
   pairs : prod_2(nat,prod_2(nat,prod_2(nat,nat)))
    | pairs = Tuple_2⁷ 1 (Tuple_2⁵ 2 (Tuple_2³ 3 4))

val
   test : prod_3(nat,nat,nat)
    | test = Tuple_3³ 1 2 3

(* ================================================== *)

