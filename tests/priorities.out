>> option verbose is set to 1
>> inductive type nat was succesfully defined
>> inductive type list was succesfully defined
>> Typing for f successful
>> the definition for f is complete
>> the definition f is provably correct

>> Typing for g1 successful
>> the definition for g1 is complete
>> the definition g1 is provably correct

>> Typing for g2 successful
>> the definition for g2 is complete
>> the definition g2 is provably correct

>> option show_lists is set to false
>> option show_nats is set to false
>> functions in environment:
val
    f : list(list(list(list(nat)))) → nat
  | f (Cons⁰ (Cons² (Cons⁴ (Cons⁶ Zero⁸ Nil⁶) Nil⁴) Nil²) Nil⁰) = Zero⁸
  | f x = Zero⁸

val
    g1 : 'a → list('b)
  | g1 x = Nil⁰

val
    g2 : nat → list(list(list(nat)))
  | g2 x = Nil⁰

>> option squash_priorities is set to true
>> Typing for f1 successful
>> the definition for f1 is complete
>> the definition f1 is provably correct

val
    f1 : list(list(list(list(nat)))) → nat
  | f1 (Cons⁰ (Cons⁰ (Cons⁰ (Cons⁰ Zero⁰ Nil⁰) Nil⁰) Nil⁰) Nil⁰) = Zero⁰
  | f1 x = Zero⁰

