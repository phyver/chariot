allow * for product of types
  t1 * t2 * t3 => prod_3(t1,t2,t3)
and tuples in terms
  () => Prod_0
  (v1,v2,v3) => Prod_3 v1 v2 v3

pygmentize / highlight to get colors 

allow "{ proj1 = u1 ; ... ; projn = un }" in terms and patterns (=> lexer, parser, term, ...)
unification now has
{ proj1 = u1 ; ... ; projn = un } ~ t   ==>   u1 ~ t.proj1, ..., un ~ t.projn

In the end, the substitution should only contain "simple" patterns, and substitution should use "simple pattern matching"


